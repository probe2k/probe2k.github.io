{"version":3,"sources":["components/landing_page.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js","asset/profile.png","asset/resume.pdf"],"names":["LandingPage","style","width","margin","className","col","src","require","alt","href","target","rel","aria-hidden","Component","Resume","title","Main","exact","path","component","App","fixedHeader","textDecoration","color","to","scroll","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.55b804c3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div style={{ width: '100%', margin: 'auto' }}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n                        <img\n                            src={require('../asset/profile.png')}\n                            alt=\"Yash Singh | probe2k\"\n                            className=\"profile-img\"\n                        />\n\n                        <div className=\"name\">\n                            <h1>Yash Singh</h1>\n                        </div>\n\n                        <div className=\"banner-text\">\n                            <h1>Machine Learning Enthusiast</h1>\n                            <hr></hr>\n\n                            <p>\n                                Android/iOS Developer | Java | Python | DevOps | *NIX SysAdmin | CyberSec | SME - ML/AI | Network Specialist | RESTful API\n                            </p>\n\n                            <div className=\"social\">\n                                {/*GitHub*/}\n                                <a href=\"https://github.com/probe2k\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-github\" aria-hidden=\"true\" />\n                                </a>\n\n                                {/*Facebook*/}\n                                <a href=\"https://facebook.com/probe2k\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\n                                </a>\n\n                                {/*LinkedIn*/}\n                                <a href=\"https://linkedin.com/in/probe2k\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-linkedin\" aria-hidden=\"true\" />\n                                </a>\n\n                                {/*Telegram*/}\n                                <a href=\"https://t.me/probe2k\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    <i className=\"fa fa-telegram\" aria-hidden=\"true\" />\n                                </a>\n                            </div>\n                        </div>\n                    </Cell>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        return (\n            <div>\n                <iframe\n                    title=\"Yash Singh/probe2k | Resume\"\n                    src={require('../asset/resume.pdf')}\n                    className=\"resume-user\"                \n                />\n            </div>\n        );\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport LandingPage from './landing_page';\nimport { Switch, Route } from 'react-router-dom';\nimport Resume from './resume';\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route path=\"/resume\" component={Resume} />\n    </Switch>\n);\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport { Layout, Navigation, Header, Content } from 'react-mdl';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"parent-tag\">\n      <Layout fixedHeader>\n        <Header className=\"header-color\" title={<Link style={{textDecoration: 'none', color: 'white'}} to=\"/\">Yash Singh / <span><strong>probe2k</strong></span></Link>} scroll>\n          <Navigation>\n            <Link to=\"/resume\"><strong>Resume</strong></Link>\n          </Navigation>\n        </Header>\n        <Content>\n          <div className=\"page-content\" />\n          <Main />\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/profile.1406e973.png\";","module.exports = __webpack_public_path__ + \"static/media/resume.6ecc5987.pdf\";"],"sourceRoot":""}